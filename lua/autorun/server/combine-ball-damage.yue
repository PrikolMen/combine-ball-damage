addonName = "Combine Ball Damage"
className = "prop_combine_ball"

DMG_DISSOLVE = DMG_DISSOLVE
:band, :bor = bit
:Simple = timer

FCVAR_FLAGS = bor( FCVAR_ARCHIVE, FCVAR_NOTIFY )
mp_combine_ball_damage = CreateConVar( "mp_combine_ball_damage", "10000", FCVAR_FLAGS, "Sets the amount of damage caused by '#{className}'.", 15, 1000000 )
mp_combine_ball_player_protection = CreateConVar( "mp_combine_ball_player_protection", "0", FCVAR_FLAGS, "Protects players against damage from his own '#{className}'.", 0, 1 )
mp_combine_ball_npc_protection = CreateConVar( "mp_combine_ball_npc_protection", "0", FCVAR_FLAGS, "Protects NPCs against damage from his own '#{className}'.", 0, 1 )

hook.Add "OnEntityCreated", addonName, =>
    if @GetClass! ~= className
        return

    Simple 0, ->
        unless @IsValid!
            return

        @AddEffects( EF_BRIGHTLIGHT )

        owner = @GetOwner!
        if not owner\IsValid! or ( mp_combine_ball_player_protection\GetBool! and owner\IsPlayer! ) or ( mp_combine_ball_npc_protection\GetBool! and owner\IsNPC! )
            return

        @[ addonName ] = owner
        @SetOwner!

hook.Add "EntityTakeDamage", addonName, ( damageInfo ) =>
    entity = damageInfo\GetInflictor!
    unless entity\IsValid! and entity\GetClass! == className
        return

    owner = entity[ addonName ]
    if owner and owner\IsValid!
        damageInfo\SetAttacker( owner )
        entity\SetOwner( owner )

        Simple 0, ->
            if entity\IsValid!
                entity\SetOwner!

    if band( damageInfo\GetDamageType!, DMG_DISSOLVE ) == 0
        damageInfo\SetDamageType( bor( damageInfo\GetDamageType!, DMG_DISSOLVE ) )

    damageInfo\SetDamage( mp_combine_ball_damage\GetInt! )
